spring:
  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0:
        type: org.apache.commons.dbcp2.BasicDataSource
        driver-class: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/demo_ds_0?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
        username: root
        password: dingshichen
      ds1:
        type: org.apache.commons.dbcp2.BasicDataSource
        driver-class: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/demo_ds_1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
        username: root
        password: dingshichen
    sharding:
      default-database-strategy:
        inline:
          sharding-column: user_id
          algorithm-expression: ds$->{user_id % 2}
      tables:
        t_order:
          actual-data-nodes: ds$->{0..1}.t_order$->{0..1}
          table-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: t_order$->{order_id % 2}
          keyGenerator:
            type: SNOWFLAKE
            column: order_id
        t_order_item:
          actual-data-nodes: ds$->{0..1}.t_order_item$->{0..1}
          table-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: t_order_item$->{order_id % 2}
          keyGenerator:
            type: SNOWFLAKE
            column: order_item_id
mybatis:
  mapper-locations: classpath:mybatis/*Mapper.xml
